#include<iostream>
#include<vector>
#include<set>
#include<algorithm>
using namespace std;
const int MAX=1e9;

int sum(int num){
	int newn=0;
	while(num){
		newn+=num%10;
		num/=10;
	}
	return newn;
}

int main(){
	int t;cin>>t;
	while(t--){
		int n,q;
		cin>>n>>q;
		set<int> index;
		vector<int> v(n);
		for (int i=0;i<n;i++){
			cin>>v[i];
			if (v[i] >= 10){
				index.insert(i);
			}
		}
		while(q--){
			int z;
			cin>>z;
			if (z==1){
				int l,r;
				cin>>l>>r;
				l--; r--;
				set<int>::iterator x;
				int temp = l;
    			while(index.empty()==false){	
    			    x=index.lower_bound(temp);
    				if (x==index.end() || *x > r){
    				    break;
    				}
    				
					v[*x] = sum(v[*x]);
					//check if done reducing
					int mb=*x;
					if (v[*x] < 10){
						index.erase(x);
						//cannot refer to x anymore because no longer exists
					}
					temp = mb+1;
					//cout<<v[mb];
    			}
					//how to get rid of info no longer need
					//use a set (<index>)
			}else{
				int y;
				cin>>y; y--;
				cout<<v[y]<<"\n";
			}
		}
	}

	return 0;
}

/*int main(){
	int t;cin>>t;
	while(t--){
		int n,q;
		cin>>n>>q;
		vector<int> v(n);
		for (int i=0;i<n;i++){
			cin>>v[i];
		}
		while(q--){
			int x;
			cin>>x;
			if (x==1){
				int l,r;
				cin>>l>>r; l--;r--;
				for (int i=l;i<=r;i++){
					v[i] = sum(v[i]);
				}
			}else{
				int y;
				cin>>y; y--;
				cout<<v[y]<<"\n";
			}
		}
	}

	return 0;
}*/
