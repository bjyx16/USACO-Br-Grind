#include <iostream>
using namespace std;
const int N=1e6;

char cow[N]={};
int list[N]={0};

int main(){
    int n;
    int Hfirst=-1, Gfirst=-1;      //store index of the first cow of one breed to appear
    int Hlast=-1, Glast=-1;
    bool Hleader=0, Gleader=0;
    int count=0;

    cin>>n;
    for (int i=0;i<n;++i){
        cin>>cow[i];
    }
    for (int i=0;i<n;++i){
        cin>>list[i];
    }
    for (int i=0;i<n;i++){
        if (cow[i]=='H'){
            Hfirst=i;
            break;
        }
    }
    for (int i=0;i<n;i++){
        if (cow[i]=='G'){
            Gfirst=i;
            break;
        }
    }
    for (int i=n-1;i>=0;i--){
        if (cow[i]=='H'){
            Hlast = i;
            break;
        }
    }
    for (int i=n-1;i>=0;i--){
        if (cow[i]=='G'){
            Glast = i;
            break;
        }
    }
    if ((list[Hfirst]-1)>=Hlast){
        Hleader = 1;//firstH has visited all H cows
        
        for (int i=0;i<Hfirst;i++){
            if (i!=Gfirst && list[i]-1>=Hfirst){
                count++;
            }
        }

    }
    if ((list[Gfirst]-1)>=Glast){
        Gleader = 1;//firstG has visited all G cows
        //check for case 2
        for (int i=0;i<Gfirst;i++){
            if (i!=Hfirst && list[i]-1>=Gfirst){
                count++;
            }
        }
    }
    if ((Hleader==1 && Gleader==1) || (list[Hfirst]-1>=Gfirst && Gleader) || (list[Gfirst]-1>=Hfirst && Hleader)){//both leaders who visited their own breed
        count++;
    }
    //cout<<Hleader<<" "<<Gleader<<"\n"; 
    cout<<count<<"\n";

    return 0;
}


/*#include <iostream>
using namespace std;
const int N = 5e5;

char cow[N]={};
int list[N]={0};

int main(){
    int n;
    int Hfirst=-1, Gfirst=-1;      //store index of the first cow of one breed to appear
    bool seenH=0;                  //the only cow that can ever possibly be leader w/all breeed in list
    bool seenG=0;                  //is the first cow of the breed to appear
    int Hleader=-1, Gleader=-1;
    int count=0;

    cin>>n;
    for (int i=0;i<n;++i){
        cin>>cow[i];
        if (!seenH && cow[i]=='H'){
            seenH=1;
            Hfirst=i;
        }
        if (!seenG && cow[i]=='G'){
            seenG=1;
            Gfirst=i;
        }
    }
    for (int i=0;i<n;++i){
        cin>>list[i];
        int flag=0;
        //check if is leader w all of one breed
        if(i==Hfirst){
            for (int j=list[i];j<n;j++){
                if (cow[j]=='H'){
                    flag++;
                }
            }
            if (flag==0){
                Hleader = i;
            }
        }
        if(i==Gfirst){
            for (int j=list[i];j<n;j++){
                if (cow[j]=='G'){
                    flag++;
                }
            }
            if (flag==0){
                Gleader = i;
            }
        }
    }
    //cout<<Hleader<<' '<<Gleader<<"\n";
    //case 1
    if (Hleader!=-1 && Gleader!=-1){
        count++;
        //cout<<"both"<<"\n";
    }

    //case 2: if one of the G cows has H's leader in their list

    for (int i=0;i<Hleader;i++){
        if (cow[i]=='G'){//might be a redundant piece of code bc if Hleader then all before have to be G
            if (Hleader<=list[i] && Hleader>=i+1){
                if (i != Gleader){
                    count++;
                    //cout<<Hleader<<" "<<i<<"\n";
                }
            }
        }
    }
    for (int i=0;i<Gleader;i++){
        if (cow[i]=='H'){//might be a redundant piece of code bc if Hleader then all before have to be G
            if (Gleader<=list[i] && Gleader>=i+1){
                if (i != Hleader){
                    count++;
                    //cout<<i<<" "<<Gleader<<"\n";
                }
            }
        }
    }
    cout<<count<<"\n";

    return 0;
}*/
